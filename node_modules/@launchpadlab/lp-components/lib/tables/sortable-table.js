'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = require('../utils');

var _helpers = require('./helpers');

var _components = require('./components');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * A component for displaying sortable data in a table.
 * This component's behavior is largely determined by the {@link TableColumn} components that are passed to it.
 * 
 * @name SortableTable
 * @type Function
 * @param {Array} [data=[]] - An array of objects to display in the table- one object per row
 * @param {Number} [initialColumn=''] - The name of the column that's initially selected
 * @param {Boolean} [disableReverse=false] - Disables automatic reversing of descending sorts
 * @param {Boolean} [disableSort=false] - A flag to disable sorting on all columns and hide sorting arrows.
 * @param {Boolean} [controlled=false] - A flag to disable sorting on all columns, while keeping the sorting arrows. Used when sorting is controlled by an external source. 
 * @param {Function} [onChange] - A callback that will be fired when the sorting state changes
 * @param {Function} [rowComponent] - A custom row component for the table. Will be passed the `data` for the row, as well as `children` to render.
 * @example
 * 
 * function PersonTable ({ people }) {
 *   return (
 *     <SortableTable data={ people } initialColumn="name">
 *       <TableColumn name="name" />
 *       <TableColumn name="age" label="Years alive" />
 *       <TableColumn name="status" component={ StatusCell } />
 *     </SortableTable>
 *   )
 * }
**/

/* eslint react/jsx-key: 0 */

var propTypes = _extends({
  columns: _propTypes2.default.arrayOf(_helpers.Types.column).isRequired,
  controlled: _propTypes2.default.bool.isRequired,
  data: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
  disableSort: _propTypes2.default.bool.isRequired,
  rowComponent: _helpers.Types.component
}, _utils.sortablePropTypes);

var defaultProps = {};

function SortableTable(_ref) {
  var columns = _ref.columns,
      unsortedData = _ref.data,
      disableSort = _ref.disableSort,
      controlled = _ref.controlled,
      sort = _ref.sort,
      ascending = _ref.ascending,
      sortPath = _ref.sortPath,
      setSortPath = _ref.setSortPath,
      setSortFunc = _ref.setSortFunc,
      rowComponent = _ref.rowComponent;

  var data = controlled || disableSort ? unsortedData : sort(unsortedData);
  return _react2.default.createElement(
    'table',
    { className: (0, _classnames2.default)({ 'sortable-table': !disableSort }) },
    _react2.default.createElement(
      'thead',
      null,
      _react2.default.createElement(
        'tr',
        null,
        columns.map(function (column, key) {
          return _react2.default.createElement(_components.TableHeader, {
            key: key,
            column: column,
            sortPath: sortPath,
            ascending: ascending,
            onClick: function onClick() {
              if (column.disabled) return;
              var newSortPath = column.name;
              var newSortFunc = column.sortFunc || null;
              setSortPath(newSortPath);
              setSortFunc(newSortFunc);
            }
          });
        })
      )
    ),
    _react2.default.createElement(
      'tbody',
      null,
      data.map(function (rowData, key) {
        return _react2.default.createElement(_components.TableRow, {
          key: key,
          rowData: rowData,
          columns: columns,
          rowComponent: rowComponent
        });
      })
    )
  );
}

SortableTable.propTypes = propTypes;
SortableTable.defaultProps = defaultProps;

var WrappedTable = (0, _utils.sortable)()(SortableTable);

// Passes relevant sortable props
function SortableTableWrapper(_ref2) {
  var initialColumn = _ref2.initialColumn,
      children = _ref2.children,
      disableSort = _ref2.disableSort,
      disableReverse = _ref2.disableReverse,
      onChange = _ref2.onChange,
      rest = _objectWithoutProperties(_ref2, ['initialColumn', 'children', 'disableSort', 'disableReverse', 'onChange']);

  var columns = (0, _helpers.getColumnData)(children, disableSort);
  var initialProps = columns.filter(function (col) {
    return col.name === initialColumn;
  }).pop();
  return _react2.default.createElement(WrappedTable, _extends({
    // Sortable props
    initialSortPath: initialProps ? initialProps.name : '',
    initialSortFunc: initialProps ? initialProps.sortFunc : null,
    onChange: onChange,
    disableReverse: disableReverse,
    // Local props
    columns: columns,
    disableSort: disableSort
  }, rest));
}

SortableTableWrapper.propTypes = {
  initialColumn: _propTypes2.default.string,
  children: _propTypes2.default.node.isRequired,
  data: _propTypes2.default.arrayOf(_propTypes2.default.object),
  disableSort: _propTypes2.default.bool,
  disableReverse: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  rowComponent: _helpers.Types.component
};

SortableTableWrapper.defaultProps = {
  initialColumn: '',
  disableSort: false,
  controlled: false,
  disableReverse: false,
  data: [],
  onChange: _utils.noop
};

exports.default = SortableTableWrapper;