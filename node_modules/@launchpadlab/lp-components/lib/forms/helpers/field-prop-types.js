'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkboxGroupPropTypes = exports.fieldPropTypes = exports.fieldOptionGroupsType = exports.fieldOptionsType = undefined;
exports.fieldPropTypesWithValue = fieldPropTypesWithValue;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 * A constant representing the `PropTypes` of the `options` prop for select components, e.g., {@link Select} and {@link CheckboxGroup}
 * 
 * @constant {PropTypes} fieldOptionsType
 * 
**/

var fieldOptionsType = exports.fieldOptionsType = _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.shape({
  key: _propTypes2.default.string.isRequired,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired
})]));

/**
 *
 * A constant representing the `PropTypes` of the `optionGroups` prop for select components, e.g., {@link Select}
 * 
 * @constant {PropTypes} fieldOptionGroupsType
 * 
**/

var fieldOptionGroupsType = exports.fieldOptionGroupsType = _propTypes2.default.arrayOf(_propTypes2.default.shape({
  name: _propTypes2.default.string.isRequired,
  options: fieldOptionsType.isRequired
}));

/**
 *
 * A function that takes `PropTypes` for a `redux-forms` [input](http://redux-form.com/6.5.0/docs/api/Field.md/#input-props) object.
 * Returns an object containing all `PropTypes` for `redux-forms` [Field](http://redux-form.com/6.5.0/docs/api/Field.md/) components.
 * 
 * @name fieldPropTypesWithValue
 * @type Function
 * @param {PropTypes} value - `PropTypes` object
 * @returns {Object} `PropTypes` for `redux-forms` [input](http://redux-form.com/6.5.0/docs/api/Field.md/#input-props) and [meta](http://redux-form.com/6.5.0/docs/api/Field.md/#meta-props) objects
 * @example
 * 
 * const valuePropType = PropTypes.string
 * 
 * fieldPropTypesWithValue(valuePropType)
 *
 * // {
 * //   input: PropTypes.shape({
 * //     value: PropTypes.string.isRequired,
 * //     name: PropTypes.string.isRequired,
 * //     onBlur: PropTypes.func,
 * //     onChange: PropTypes.func
 * //   }),
 * //   meta: PropTypes.shape({
 * //     dirty: PropTypes.bool,
 * //     invalid: PropTypes.bool,
 * //     pristine: PropTypes.bool,
 * //     touched: PropTypes.bool,
 * //     valid: PropTypes.bool,
 * //   }).isRequired
 * // }
 *
**/

function fieldPropTypesWithValue(value) {
  return {
    input: _propTypes2.default.shape({
      value: value.isRequired,
      name: _propTypes2.default.string.isRequired,
      onBlur: _propTypes2.default.func,
      onChange: _propTypes2.default.func
    }),
    meta: _propTypes2.default.shape({
      dirty: _propTypes2.default.bool,
      invalid: _propTypes2.default.bool,
      pristine: _propTypes2.default.bool,
      touched: _propTypes2.default.bool,
      valid: _propTypes2.default.bool
    }).isRequired
  };
}

/** 
 *
 * A constant representing default `PropTypes` for `redux-forms` [Field](http://redux-form.com/6.5.0/docs/api/Field.md/) values.
 * Default types are either `number` or `string`.
 * 
 * @constant {PropTypes} defaultValueTypes
 *
**/

var defaultValueTypes = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]);

/** 
 *
 * An object containing the default `PropTypes` for `redux-forms` [Field](http://redux-form.com/6.5.0/docs/api/Field.md/) components.
 * 
 * @constant {Object} fieldPropTypes
 *
**/

var fieldPropTypes = exports.fieldPropTypes = fieldPropTypesWithValue(defaultValueTypes);

/** 
 *
 * A constant representing the `PropTypes` of the `input` prop for checkbox group components, e.g., {@link CheckboxGroup} and {@link DropdownCheckboxGroup}
 * 
 * @constant {PropTypes} checkboxGroupPropTypes
 *
**/

var checkboxGroupPropTypes = exports.checkboxGroupPropTypes = fieldPropTypesWithValue(_propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])));