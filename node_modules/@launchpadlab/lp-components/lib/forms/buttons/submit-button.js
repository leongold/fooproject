'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _button = require('./button');

var _button2 = _interopRequireDefault(_button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A wrapper around the {@link Button} component that adds `type="submit"`. Generally used in the context of forms. 
 *
 * With the exception of `type`, this component shares the same props as {@link Button}.
 *
 * @name SubmitButton
 * @type Function
 * @example
 * 
 * function PersonForm ({ handleSubmit, pristine, invalid, submitting }) {
 *   return (
 *     <form onSubmit={ handleSubmit }>
 *       <Field name="name" component={ Input } />
 *       <Field name="age" component={ Input } type="number" />
 *       <SubmitButton {...{ pristine, invalid, submitting }}>
 *         Submit
 *       </SubmitButton>
 *     </form>
 *   )
 * }
 * 
 * // When SubmitButton is pressed, form will submit and handleSubmit() will be called.
**/

function SubmitButton(props) {
  return _react2.default.createElement(_button2.default, _extends({}, props, { type: 'submit' }));
}

exports.default = SubmitButton;