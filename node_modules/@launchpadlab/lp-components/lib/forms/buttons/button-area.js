'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 * A layout component that wraps its children in a `div` with class `button-area`. This component may be used to help style forms.
 *
 * If a `className` is provided to the component, it will be appended to the default class (see example).
 * 
 * @name ButtonArea
 * @type Function
 * @param {String} [className] - A class to add to the wrapper
 * @param {Function} [children] - The React component(s) being wrapped
 * @example
 * 
 * function ButtonForm ({ handleSubmit }) {
 *   return (
 *     <form onSubmit={ handleSubmit }>
 *       <ButtonArea className="my-area">
 *         <Button> Cancel </Button>
 *         <Button> Submit </Button>
 *       </ButtonArea>
 *     </form>
 *   )
 * }
 *
 * // Buttons will be wrapped in a div with class: "button-area my-area"
 *
**/

var propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

function ButtonArea(_ref) {
  var className = _ref.className,
      children = _ref.children;

  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)('button-area', className) },
    children
  );
}

ButtonArea.propTypes = propTypes;

exports.default = ButtonArea;