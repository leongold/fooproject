'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reduxFlash = require('redux-flash');

var _flashMessage = require('./flash-message');

var _flashMessage2 = _interopRequireDefault(_flashMessage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 * A component that displays multiple flash messages generated by [redux-flash](https://github.com/LaunchPadLab/redux-flash).
 * Most apps will need only one of these containers at the top level.
 * 
 * @name FlashMessageContainer
 * @type Function
 * @param {Object} messages - The flash messages that will be displayed.
 * @param {Number} [limit] - Maximum number of concurrent messages to display
 * @example
 * 
 * function MyApp ({ messages }) {
 *   return (
 *      <div>
 *         <FlashMessageContainer messages={ messages } />
 *         <RestOfTheApp />
 *      </div>
 *   )
 * }
 *
**/

var propTypes = {
  messages: _propTypes2.default.arrayOf(_reduxFlash.flashMessageType).isRequired,
  limit: _propTypes2.default.number
};

var defaultProps = {
  limit: 5
};

function FlashMessageContainer(_ref) {
  var messages = _ref.messages,
      limit = _ref.limit;

  var messagesToDisplay = messages.slice(0, limit);
  return _react2.default.createElement(
    'div',
    { className: 'flash-message-container', role: 'alert' },
    messagesToDisplay.map(function (message) {
      return _react2.default.createElement(_flashMessage2.default, { key: message.id, message: message });
    })
  );
}

FlashMessageContainer.propTypes = propTypes;
FlashMessageContainer.defaultProps = defaultProps;

exports.default = FlashMessageContainer;