'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A link component that is used to make it easier for keyboard and screen reader users to jump to the main content of a page. 
 * 
 * This can target any element, although by convention it should be used in tandem with the HTML5 semantic <main> element. 
 * 
 * CSS styling is encouraged to make the element initially visibly hidden so that it will still be focusable by the intended audience but will not cause any unwanted issues for sighted users.
 * 
 * @name SkipNavLink
 * @type Function
 * @param {Function} [children] - Any React component(s) being wrapped by the link
 * @param {String} [className] - A string that will be set to the class of the anchor tag
 * @param {String} targetId - A string that indicates the id of the element that the link will navigate to
 * @example
 * 
 * function Main () {
 *   return (
 *    <SkipNavLink targetId='main-content'>
 *      Skip to main
 *    </SkipNavLink>
 *    <Header />
 *    <NavBar />
 *    <main id='main-content'>
 *      <h1>Hello, world</h1>
 *    </main>
 *   )
 * }
 * 
**/

var propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  targetId: _propTypes2.default.string.isRequired
};

var defaultProps = {
  children: 'Skip to Content',
  className: ''
};

function SkipNavLink(_ref) {
  var children = _ref.children,
      className = _ref.className,
      targetId = _ref.targetId;

  return _react2.default.createElement(
    'a',
    { id: 'skip-nav-link', className: className, href: '#' + targetId },
    children
  );
}

SkipNavLink.propTypes = propTypes;
SkipNavLink.defaultProps = defaultProps;

exports.default = SkipNavLink;